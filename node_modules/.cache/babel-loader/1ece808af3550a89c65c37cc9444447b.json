{"ast":null,"code":"const crypto = require(\"crypto\");\n\nconst algorithm = \"aes-192-cbc\"; //algorithm to use\n\nexport const decryptNik = encrypt => {\n  const password = \"nik\";\n  const key = crypto.scryptSync(password, \"docpro\", 24);\n  const iv = Buffer.alloc(16, 0);\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n  var decrypted = decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  return decrypted;\n};\nexport const decryptTtl = encrypt => {\n  const password = \"ttl\";\n  const key = crypto.scryptSync(password, \"docpro\", 24);\n  const iv = Buffer.alloc(16, 0);\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n  var decrypted = decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  return decrypted;\n};\nexport const decryptAlamat = encrypt => {\n  const password = \"alamat\";\n  const key = crypto.scryptSync(password, \"docpro\", 24);\n  const iv = Buffer.alloc(16, 0);\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n  var decrypted = decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  return decrypted;\n};\nexport const decryptPhone = encrypt => {\n  const password = \"phone\";\n  const key = crypto.scryptSync(password, \"docpro\", 24);\n  const iv = Buffer.alloc(16, 0);\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n  var decrypted = decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  return decrypted;\n};","map":{"version":3,"sources":["/Users/nandhikapratamaputra/web_Docpro/docpro/src/Components/decrypt.js"],"names":["crypto","require","algorithm","decryptNik","encrypt","password","key","scryptSync","iv","Buffer","alloc","decipher","createDecipheriv","decrypted","update","final","decryptTtl","decryptAlamat","decryptPhone"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,SAAS,GAAG,aAAlB,C,CAAiC;;AAEjC,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACnC,QAAMC,QAAQ,GAAG,KAAjB;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkBF,QAAlB,EAA4B,QAA5B,EAAsC,EAAtC,CAAZ;AACA,QAAMG,EAAE,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,EAAiB,CAAjB,CAAX;AACA,QAAMC,QAAQ,GAAGX,MAAM,CAACY,gBAAP,CAAwBV,SAAxB,EAAmCI,GAAnC,EAAwCE,EAAxC,CAAjB;AACA,MAAIK,SAAS,GACXF,QAAQ,CAACG,MAAT,CAAgBV,OAAhB,EAAyB,KAAzB,EAAgC,MAAhC,IAA0CO,QAAQ,CAACI,KAAT,CAAe,MAAf,CAD5C;AAGA,SAAOF,SAAP;AACD,CATI;AAWL,OAAO,MAAMG,UAAU,GAAIZ,OAAD,IAAa;AACrC,QAAMC,QAAQ,GAAG,KAAjB;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkBF,QAAlB,EAA4B,QAA5B,EAAsC,EAAtC,CAAZ;AACA,QAAMG,EAAE,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,EAAiB,CAAjB,CAAX;AACA,QAAMC,QAAQ,GAAGX,MAAM,CAACY,gBAAP,CAAwBV,SAAxB,EAAmCI,GAAnC,EAAwCE,EAAxC,CAAjB;AACA,MAAIK,SAAS,GACXF,QAAQ,CAACG,MAAT,CAAgBV,OAAhB,EAAyB,KAAzB,EAAgC,MAAhC,IAA0CO,QAAQ,CAACI,KAAT,CAAe,MAAf,CAD5C;AAGA,SAAOF,SAAP;AACD,CATM;AAUP,OAAO,MAAMI,aAAa,GAAIb,OAAD,IAAa;AACxC,QAAMC,QAAQ,GAAG,QAAjB;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkBF,QAAlB,EAA4B,QAA5B,EAAsC,EAAtC,CAAZ;AACA,QAAMG,EAAE,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,EAAiB,CAAjB,CAAX;AACA,QAAMC,QAAQ,GAAGX,MAAM,CAACY,gBAAP,CAAwBV,SAAxB,EAAmCI,GAAnC,EAAwCE,EAAxC,CAAjB;AACA,MAAIK,SAAS,GACXF,QAAQ,CAACG,MAAT,CAAgBV,OAAhB,EAAyB,KAAzB,EAAgC,MAAhC,IAA0CO,QAAQ,CAACI,KAAT,CAAe,MAAf,CAD5C;AAGA,SAAOF,SAAP;AACD,CATM;AAWP,OAAO,MAAMK,YAAY,GAAId,OAAD,IAAa;AACvC,QAAMC,QAAQ,GAAG,OAAjB;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkBF,QAAlB,EAA4B,QAA5B,EAAsC,EAAtC,CAAZ;AACA,QAAMG,EAAE,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,EAAiB,CAAjB,CAAX;AACA,QAAMC,QAAQ,GAAGX,MAAM,CAACY,gBAAP,CAAwBV,SAAxB,EAAmCI,GAAnC,EAAwCE,EAAxC,CAAjB;AACA,MAAIK,SAAS,GACXF,QAAQ,CAACG,MAAT,CAAgBV,OAAhB,EAAyB,KAAzB,EAAgC,MAAhC,IAA0CO,QAAQ,CAACI,KAAT,CAAe,MAAf,CAD5C;AAGA,SAAOF,SAAP;AACD,CATM","sourcesContent":["const crypto = require(\"crypto\");\nconst algorithm = \"aes-192-cbc\"; //algorithm to use\n\nexport const decryptNik = (encrypt) => {\n    const password = \"nik\";\n    const key = crypto.scryptSync(password, \"docpro\", 24);\n    const iv = Buffer.alloc(16, 0);\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n    var decrypted =\n      decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  \n    return decrypted;\n  };\n\n  export const decryptTtl = (encrypt) => {\n    const password = \"ttl\";\n    const key = crypto.scryptSync(password, \"docpro\", 24);\n    const iv = Buffer.alloc(16, 0);\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n    var decrypted =\n      decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  \n    return decrypted;\n  };\n  export const decryptAlamat = (encrypt) => {\n    const password = \"alamat\";\n    const key = crypto.scryptSync(password, \"docpro\", 24);\n    const iv = Buffer.alloc(16, 0);\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n    var decrypted =\n      decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  \n    return decrypted;\n  };\n\n  export const decryptPhone = (encrypt) => {\n    const password = \"phone\";\n    const key = crypto.scryptSync(password, \"docpro\", 24);\n    const iv = Buffer.alloc(16, 0);\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n    var decrypted =\n      decipher.update(encrypt, \"hex\", \"utf8\") + decipher.final(\"utf8\");\n  \n    return decrypted;\n  };\n\n"]},"metadata":{},"sourceType":"module"}